spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/myorder
#name이 아니라 username이다.
#root 뒤에도 공백 있으면 안된다.
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

#sql문에서 ?를 채우기
logging.level.org.hibernate.type.descriptor.sql=trace

#mysql 뒤에 공백 있으면 안된다.
# dialect~ 라고 에러뜨면 아래 설정. #sql_server = mssql이다.
spring.jpa.database=mysql

jwt.header=Authorization
#PNU-zhdhfhd33-k-hackathon를 base64 encode
jwt.secret=UE5VLXpoZGhmaGQzMy1rLWhhY2thdGhvbg==JWT
#60*60*24*1000 milli sec 단위로 표현.
jwt.validity.time=86400000

#OAuth.stateToken=UE5VLXpoZGhmaGQzMy1rLWhhY2thdGhvbg==OAuth
#서버용
#OAuth.naver.redirectURL=http://ec2-13-124-200-247.ap-northeast-2.compute.amazonaws.com:80/login/naver
#로컬용
OAuth.naver.redirectURL=http://localhost/login/naver
OAuth.naver.clientID=i6vA823oE3F_9QtAonj6
OAuth.naver.secret=6U0jc_RTWC

#로깅레벨 info, debug, trace
logging.level.root=info

#포트 변경 80 : http, 443 : https
server.port=80

#파일업로드 설정
spring.servlet.multipart.enabled=true

#임시저장공간임. 실제로 저장되는 곳 아니다. multipart를 안쓴다.
#spring.servlet.multipart.location=tmpUpload
#spring.servlet.multipart.max-request-size=30MB
#spring.servlet.multipart.max-file-size=5MB

#
myorder.upload.store=upload/store
myorder.upload.demand=upload/demand








